permissions:
  contents: write

# .github/workflows/build.yml
name: Build e Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: windows-latest
    env:
      VERSION: v1.1.1

    steps:
      # 1) Puxa o código
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Seta Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3) Instala dependências e PyInstaller
      - name: Install Dependencies
        run: pip install -r requirements.txt

      # 4) Gera o .exe usando o arquivo .spec
      - name: Build EXE com arquivo .spec
        run: pyinstaller "classificador_de_Imagens.spec"

      # 5) Instala Inno Setup
      - name: Install Inno Setup
        run: |
          $url = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
          Invoke-WebRequest -Uri $url -OutFile "innosetup-installer.exe"
          Start-Process -FilePath "innosetup-installer.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait

      # 6) Cria script do Inno Setup
      - name: Create Inno Setup Script
        run: |
          $version = "${{ env.VERSION }}".TrimStart('v')
          $script = @"
          [Setup]
          AppName=Classificador de Imagens
          AppVersion=$version
          AppPublisher=GuilllasDefas
          AppPublisherURL=https://github.com/GuilllasDefas/Classificador
          AppSupportURL=https://github.com/GuilllasDefas/Classificador/issues
          AppUpdatesURL=https://github.com/GuilllasDefas/Classificador/releases
          DefaultDirName={autopf}\Classificador de Imagens
          DefaultGroupName=Classificador de Imagens
          AllowNoIcons=yes
          LicenseFile=
          OutputDir=setup-output
          OutputBaseFilename=Classificador-de-Imagens-Setup-${{ env.VERSION }}
          SetupIconFile=assets\icon.ico
          Compression=lzma
          SolidCompression=yes
          WizardStyle=modern
          ArchitecturesInstallIn64BitMode=x64
          
          [Languages]
          Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
          
          [Tasks]
          Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
          Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 6.1
          
          [Files]
          Source: "dist\Classificador de Imagens\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
          
          [Icons]
          Name: "{group}\Classificador de Imagens"; Filename: "{app}\Classificador de Imagens.exe"; IconFilename: "{app}\assets\icon.ico"
          Name: "{group}\{cm:UninstallProgram,Classificador de Imagens}"; Filename: "{uninstallexe}"
          Name: "{autodesktop}\Classificador de Imagens"; Filename: "{app}\Classificador de Imagens.exe"; Tasks: desktopicon; IconFilename: "{app}\assets\icon.ico"
          Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\Classificador de Imagens"; Filename: "{app}\Classificador de Imagens.exe"; Tasks: quicklaunchicon; IconFilename: "{app}\assets\icon.ico"
          
          [Run]
          Filename: "{app}\Classificador de Imagens.exe"; Description: "{cm:LaunchProgram,Classificador de Imagens}"; Flags: nowait postinstall skipifsilent
          
          [UninstallDelete]
          Type: filesandordirs; Name: "{app}"
          "@
          
          $script | Out-File -FilePath "setup.iss" -Encoding UTF8

      # 7) Gera o setup.exe
      - name: Build Setup with Inno Setup
        run: |
          $innoPath = "${env:ProgramFiles(x86)}\Inno Setup 6\ISCC.exe"
          if (-not (Test-Path $innoPath)) {
            $innoPath = "${env:ProgramFiles}\Inno Setup 6\ISCC.exe"
          }
          & $innoPath "setup.iss"

      # 8) Empacota num ZIP (mantém o original)
      - name: Zip App
        run: Compress-Archive -Path "dist\Classificador de Imagens\*" -DestinationPath "Classificador-de-Imagens.zip"
        
      # 9) Cria uma tag automática
      - name: Criar tag automática
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ env.VERSION }} -m "Release automática ${{ env.VERSION }}"
          git push origin ${{ env.VERSION }}

      # 10) Cria a Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Classificador de Imagens ${{ env.VERSION }}
          body: |           
            ##  v1.1.1 - Correção

            - Ao invés de tentar atualizar, é exibido o link para o download de nova versão
            
            ### Downloads Disponíveis:
            - **Setup.exe**: Instalador completo com desinstalador automático
            - **ZIP**: Versão portátil (extrair e executar)

          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 11) Anexa o ZIP à Release criada
      - name: Upload ZIP Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Classificador-de-Imagens.zip
          asset_name: Classificador-de-Imagens-${{ env.VERSION }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 12) Anexa o Setup à Release
      - name: Upload Setup Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: setup-output/Classificador-de-Imagens-Setup-${{ env.VERSION }}.exe
          asset_name: Classificador-de-Imagens-Setup-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}